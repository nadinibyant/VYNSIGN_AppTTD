<!doctype html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <meta name="csrf-token" content="your-csrf-token-value">
  <title>Management</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65" crossorigin="anonymous">
  <link href="/css/sidebars.css" rel="stylesheet">
  <link href="/css/style2.css" rel="stylesheet">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">
</head>


<body>

  <nav class="navbar navbar1 navbar-expand-lg">
    <div class="container-fluid">
      <a class="navbar-brand fw-bold ms-3" href="#">VYNSIGN</a>
      <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent"
        aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="navbarSupportedContent">
        <ul class="navbar-nav mb-2 mb-lg-0 ms-auto">
          <li class="nav-item dropdown">
            <a class="nav-link dropdown-toggle text-dark" id="usernameProfile" href="#" role="button"
              data-bs-toggle="dropdown" aria-expanded="false">
            </a>
            <ul class="dropdown-menu">
              <li>
                <a class="dropdown-item" href="/profile">
                  <i class="bi bi-person"></i>
                  Profile
                </a>
              </li>
              <li>
                <a class="dropdown-item" href="/profile/logout" id="btn-logout">
                  <i class="bi bi-box-arrow-right"></i>
                  Sign Out
                </a>
              </li>
            </ul>
          </li>
        </ul>
      </div>
    </div>
  </nav>
  <main class="d-flex flex-nowrap vh-100">

    <div class="d-flex flex-column flex-shrink-0 p-3 side" style="width: 250px;">
      <p class="text-muted">Documents</p>
      <ul class="nav nav-pills flex-column mb-auto">
        <li>
          <a href="locallhost:3000/management" class="nav-link active text-dark fw-bold bg-light">
            <i class="bi bi-database-down"></i>
            Management
          </a>
        </li>
        <br>
        <p class="text-muted">Signature</p>
        <li>
          <a href="/request" class="nav-link text-dark fw-semibold">
            <i class="bi bi-pencil-square"></i>
            Request
          </a>
        </li>
        <li>
          <a href="/sent" class="nav-link text-dark fw-semibold">
            <i class="bi bi-send"></i>
            Sent
          </a>
        </li>
      </ul>

    </div>

    <div class="b-example-divider text-dark">
      <nav class="navbar navbar2">
        <div class="container-fluid">
          <p class="navbar-brand fw-semibold m-2">Management</p>
        </div>
      </nav>
      <div class="isi ms-3 mt-3 mb-3 me-4">
        <br>
        <a href="/management/addDoc"><button type="button" class="btn btn-primary mb-5">Add Document</button></a>
        <br>
        <br>
        <div class="table-responsive">
          <table class="table text-center">
            <thead>
              <tr>
                <th scope="col">No</th>
                <th scope="col">Document</th>
                <th scope="col">Name</th>
                <th scope="col">Description</th>
                <th scope="col">Date</th>
                <th scope="col">Action</th>
              </tr>
            </thead>
            <tbody id="documentTableBody">

            </tbody>
          </table>
        </div>
      </div>
    </div>


  </main>




  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"
    integrity="sha384-kenU1KFdBIe4zVF0s0G1M5b4hcpxyD9F7jL+jjXkk+Q2h455rYXK/7HAuoJl+0I4" crossorigin="anonymous">
  </script>
  <script src="/js/sidebars.js"></script>
  <script>
    document.addEventListener("DOMContentLoaded", async function () {
      const usernameProfile = document.getElementById("usernameProfile");
      const username = '<%= username %>';

      const gambarProfile = document.createElement("i")
      gambarProfile.classList.add("bi", "bi-person");

      const teksProfile = document.createTextNode(username);

      usernameProfile.appendChild(gambarProfile);
      usernameProfile.appendChild(teksProfile);

      const tbody = document.getElementById("documentTableBody");

      try {
        const response = await fetch('/management/allDoc');
        const data = await response.json();

        if (data.success) {
          const documen = data.documents;
          console.log(documen)
          var i = 1;
          // Perbarui tabel dengan data dokumen
          documen.forEach((doc) => {
            const tr = document.createElement("tr");
            tbody.appendChild(tr);

            const no = document.createElement("td")
            const name = document.createElement("td")
            const name2 = document.createElement('td')
            const desc = document.createElement("td")
            const time = document.createElement("td")
            const action = document.createElement("td")

            tbody.appendChild(tr)
            tr.appendChild(no)
            tr.appendChild(name)
            tr.appendChild(name2)
            tr.appendChild(desc)
            tr.appendChild(time)
            tr.appendChild(action)

            no.setAttribute('scope', 'row')

            no.innerHTML = i;
            name.innerHTML = doc.filename
            name2.innerHTML = doc.name
            desc.innerHTML = doc.desc
            time.innerHTML = doc.created_at
            i++;

            const detail = document.createElement("a")
            const edit = document.createElement("a")
            const del = document.createElement("a")

            const logoSearch = document.createElement("i")
            const logoEdit = document.createElement("i")
            const logoDel = document.createElement("i")

            action.appendChild(detail)
            detail.setAttribute('href', '/management/detailDoc/' + doc.id);
            detail.classList.add("btn", "btn-success", "btn-sm", "me-2")
            detail.appendChild(logoSearch)
            logoSearch.classList.add("bi", "bi-search")

            action.appendChild(edit)
            edit.setAttribute('href', '/management/editDoc/' + doc.id)
            edit.classList.add("btn", "btn-warning", "btn-sm", "me-2")
            edit.appendChild(logoEdit)
            logoEdit.classList.add("bi", "bi-pencil")

            action.appendChild(del)
            del.setAttribute('data-id', doc.id);
            del.setAttribute('data-id-user', doc.id_user);
            del.classList.add("btn", "btn-danger", "btn-sm", "btnDelete")
            del.appendChild(logoDel)
            logoDel.classList.add("bi", "bi-trash")
          });

        } else {
          alert(data.message);
        }
      } catch (error) {
        console.log(error);
      }

      const btndel = document.getElementsByClassName("btnDelete")
      console.log(btndel)

      for (let i = 0; i < btndel.length; i++) {
        btndel[i].addEventListener('click', async function () {
          const docId = btndel[i].getAttribute('data-id')
          console.log(docId)

          const idUser = btndel[i].getAttribute('data-id-user')
          console.log(idUser)

          if (confirm('Apakah Anda Yakin Ingin Menghapus Dokumen Ini ?') == true) {
            const response = await fetch(
              `/management/delDoc/${docId}/users/${idUser}`, {
                method: 'DELETE'
              })
            const data = await response.json();

            if (data.success == true) {
              alert(data.message)
              location.reload()
            } else if (data.success == false) {
              alert(data.message)
              location.reload()
            }
          } else {
            alert('Data Tidak Berhasil Di hapus')
            location.reload()
          }
        })
      }

      const btnLogout = document.getElementById('btn-logout');
      btnLogout.addEventListener('click', async function (event) {
        event.preventDefault()

        // Buat elemen form sementara
        const form = document.createElement('form');
        form.method = 'POST';
        form.action = '/profile/logout';

        // Tambahkan elemen input yang diperlukan untuk mengirim permintaan POST
        const csrfToken = document.querySelector('meta[name="csrf-token"]').content;
        const csrfInput = document.createElement('input');
        csrfInput.type = 'hidden';
        csrfInput.name =
          '_csrf'; // Ubah sesuai dengan nama input yang digunakan di sisi server
        csrfInput.value = csrfToken;
        form.appendChild(csrfInput);

        // Tambahkan form ke body dan submit secara otomatis
        document.body.appendChild(form);
        form.submit();

        try {
          const response = await fetch('/profile/logout', {
            method: 'POST'
          });
          const data = await response.json();

          if (data.success) {
            window.location.href = '/signin';
          } else {
            console.log(data.message);
            location.reload()
          }
        } catch (error) {
          console.log(error);
        }
      })
    });
  </script>
</body>

</html>